c These are our atomic propositions:
c NCS1 TRY1 CS1 NCS2 TRY2 CS2 NCS3 TRY3 CS3 NCS4 TRY4 CS4
c
AND (NCS1 AND NCS2)
AND NCS3
AND NCS4
c
c Mutual exclusion
AND AG NOT (CS1 AND ((CS2 OR CS3) OR CS4))
AND AG NOT (CS2 AND (CS3 OR CS4))
AND AG NOT (CS3 AND CS4)
c
c Starvation Freedom: If one enters the try section, one is guaranteed to eventually enter the critical section
cAND AG (NOT TRY1 OR AF CS1)
cAND AG (NOT TRY2 OR AF CS2)
cAND AG (NOT TRY3 OR AF CS3)
cAND AG (NOT TRY4 OR AF CS4)
c
c NCS process can enter the try section
AND AG (NOT NCS1 OR EX TRY1)
AND AG (NOT NCS2 OR EX TRY2)
AND AG (NOT NCS3 OR EX TRY3)
AND AG (NOT NCS4 OR EX TRY4)
c
c
c The critical section can be exited at any time.
c the original Emerson spec has this, although I don't think the ASP paper has it. Perhaps they have it implicitly
AND AG (NOT CS1 OR EX NCS1)
AND AG (NOT CS2 OR EX NCS2)
AND AG (NOT CS3 OR EX NCS3)
AND AG (NOT CS4 OR EX NCS4)
c
c System can move when one process does not want the Mutex
c removed for simplicity (though it'd be REALLY NICE to have a structure that satisfies this)
cAND AG (NOT NCS1 OR EX NCS1)
cAND AG (NOT NCS2 OR EX NCS2)
cAND AG (NOT NCS3 OR EX NCS3)
cAND AG (NOT NCS4 OR EX NCS4)
c
c
c
cc Part of the "Local state can't jump" property
c Disable this when setting enforceLocalStructure = True
c
c don't go directly from NCS to CS, go via TRY.
cAND AG (NCS1 -> AX NOT CS1)
cAND AG (NCS2 -> AX NOT CS2)
cAND AG (NCS3 -> AX NOT CS3)
cAND AG (NCS4 -> AX NOT CS4)
c
c don't go directly from CS to TRY, go via NCS.
cAND AG (CS1 -> AX NOT TRY1)
cAND AG (CS2 -> AX NOT TRY2)
cAND AG (CS3 -> AX NOT TRY3)
cAND AG (CS4 -> AX NOT TRY4)
c
cAND AG (NOT TRY1 OR AX (CS1 OR TRY1))
cAND AG (NOT TRY2 OR AX (CS2 OR TRY2))
cAND AG (NOT TRY3 OR AX (CS3 OR TRY3))
cAND AG (NOT TRY4 OR AX (CS4 OR TRY4))
c
c
c
c
c from ASP paper FIXME TODO make this work for 4 processes
c
c Bounded Overtaking: While Process P_i is in the waiting section, every other process will exit its critical section at most once
c AND AG NOT XXX
c XXX = ((TRY1 AND CS2) AND (TRY1 EU YYY))
c YYY = ((TRY1 AND TRY2) AND (TRY1 EU (TRY1 AND CS2)))
cAND AG NOT ((TRY1 AND CS2) AND (TRY1 EU ((TRY1 AND TRY2) AND (TRY1 EU (TRY1 AND CS2)))))
cAND AG NOT ((TRY1 AND CS3) AND (TRY1 EU ((TRY1 AND TRY3) AND (TRY1 EU (TRY1 AND CS3)))))
cAND AG NOT ((TRY2 AND CS1) AND (TRY2 EU ((TRY2 AND TRY1) AND (TRY2 EU (TRY2 AND CS1)))))
cAND AG NOT ((TRY2 AND CS3) AND (TRY2 EU ((TRY2 AND TRY3) AND (TRY2 EU (TRY2 AND CS3)))))
cAND AG NOT ((TRY3 AND CS1) AND (TRY3 EU ((TRY3 AND TRY1) AND (TRY3 EU (TRY3 AND CS1)))))
cAND AG NOT ((TRY3 AND CS2) AND (TRY3 EU ((TRY3 AND TRY2) AND (TRY3 EU (TRY3 AND CS2)))))
c
c
c Maximal Reactivity: if process P_i is in the waiting section and all others are in the noncritical section, then the there's a next state such that P_i is in the critical section
cAND AG (((TRY1 AND NCS2) AND NCS3) -> EX CS1)
cAND AG (((TRY2 AND NCS1) AND NCS3) -> EX CS2)
cAND AG (((TRY3 AND NCS1) AND NCS2) -> EX CS3)
